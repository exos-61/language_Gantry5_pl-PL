{% extends '@nucleus/partials/particle.html.twig' %}

{% set containerblock_start %}
	<div id="{{ id }}" class="gp_slideshow2 {{ particle.class }}">
{% endset %}

{% set containerblock_end %}
	</div>
{% endset %}

{% set gp_contents %}
	{% for item in particle.gp_items %}
        <div class="gp_block gp_slide{{ loop.index }}">
            <div class="gp_item">
                <div class="gp_image">
                    <img src="{{ url(item.img)|e }}" alt="{{ item.img_alt|e }}">
                    <div class="gp_mask style_{{ item.mask|e }}"></div>
                </div>
                <div class="gp_content {{ item.text_pos|e }}">
                    <div class="gp_content_inner">
                        {% if item.title %}<h3 class="gp_title" style="color:{{ item.title_color|e }};">{{ item.title|raw|nl2br }}</h3>{% endif %}
                        {% if item.desc %}<div class="gp_desc" style="color:{{ item.desc_color|e }};">{{ item.desc|raw|nl2br }}</div>{% endif %}
                        {% if item.btn1_link %}
                            <div class="gp_buttons">
                                {% if item.btn1_link %}
                                    <a href="{{ item.btn1_link|e }}" class="gp_link" style="color:{{ item.desc_color|e }};">{{ item.btn1_text|e }}</a>
                                {% endif %}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
	{% endfor %}
{% endset %}

{% block stylesheets %}
    <style type="text/css">
        #{{ id }}  .gp_content_inner {
            max-width: {{ particle.large_desktop|default('75') }}rem;
        }
    </style>
{% endblock %}

{% set gpscript %}
    jQuery(document).ready(function($) {
        $('#{{ id }} .gp_grid').slick({
            rtl: {% if gantry.page.direction == 'rtl' %}true{% else %}false{% endif %},
            infinite: true,
            autoplay: {% if particle.autoplay %}true{% else %}false{% endif %},
            pauseOnHover: {% if particle.pauseOnHover %}true{% else %}false{% endif %},
            adaptiveHeight: true,
        });
        function GpContent() {
            var maxWidth  = 1300;
            var $window = $(window);
            var width = $window.width();
            var scale;
            if(width >= maxWidth) {
                $("#{{ id }} .gp_content_inner").css({"-webkit-transform": "none"});
                return;
            }
            scale = Math.min(width/maxWidth) - 0.1;
            $("#{{ id }} .gp_content_inner").css({"-webkit-transform": "scale(" + scale + ")"});
        };
        GpContent();
        $(window).resize(function(evt) {
            GpContent();
        });
    });
{% endset %}

{% block particle %}
	{{ containerblock_start }}
        {% if particle.gp_items %}
            {{ gp_heading }}
            <div class="gp_items">
                <div class="gp_grid">
                    {{ gp_contents }}
                </div>    
            </div>
        {% endif %}
	{{ containerblock_end }}
{% endblock %}

{% do gantry.load('jquery') %}
{% if particle.slick %}
    {% do gantry.document.addScript(url('gantry-theme://js/slick.min.js'), 0, 'footer') %}
{% endif %}
{% do gantry.document.addInlineScript(gpscript, 0, 'footer') %}